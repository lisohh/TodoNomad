[{"/Users/lisyongsyong/repository/TodoNomad/src/index.tsx":"1","/Users/lisyongsyong/repository/TodoNomad/src/theme.ts":"2","/Users/lisyongsyong/repository/TodoNomad/src/App.tsx":"3","/Users/lisyongsyong/repository/TodoNomad/src/components/ToDoList.tsx":"4","/Users/lisyongsyong/repository/TodoNomad/src/components/CreateToDo.tsx":"5","/Users/lisyongsyong/repository/TodoNomad/src/components/atoms.tsx":"6","/Users/lisyongsyong/repository/TodoNomad/src/components/ToDo.tsx":"7","/Users/lisyongsyong/repository/TodoNomad/src/components/CreateCategory.tsx":"8"},{"size":416,"mtime":1677574534566,"results":"9","hashOfConfig":"10"},{"size":257,"mtime":1677503038558,"results":"11","hashOfConfig":"10"},{"size":1947,"mtime":1677653785963,"results":"12","hashOfConfig":"10"},{"size":2161,"mtime":1677658281337,"results":"13","hashOfConfig":"10"},{"size":853,"mtime":1677649272617,"results":"14","hashOfConfig":"10"},{"size":1682,"mtime":1677653792195,"results":"15","hashOfConfig":"10"},{"size":1117,"mtime":1677647696865,"results":"16","hashOfConfig":"10"},{"size":1120,"mtime":1677658275038,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"nx328h",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lisyongsyong/repository/TodoNomad/src/index.tsx",[],[],[],"/Users/lisyongsyong/repository/TodoNomad/src/theme.ts",[],[],"/Users/lisyongsyong/repository/TodoNomad/src/App.tsx",["44","45"],[],"/Users/lisyongsyong/repository/TodoNomad/src/components/ToDoList.tsx",["46"],[],"/Users/lisyongsyong/repository/TodoNomad/src/components/CreateToDo.tsx",[],[],"/Users/lisyongsyong/repository/TodoNomad/src/components/atoms.tsx",[],[],"/Users/lisyongsyong/repository/TodoNomad/src/components/ToDo.tsx",["47"],[],"import { useSetRecoilState } from \"recoil\";\nimport { IToDo, toDoState } from \"./atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const oldToDo = oldToDos[targetIndex];\n      const newToDo = { text, id, category: name as any };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  return (\n    <li>\n      <span>{text}</span>\n      {category !== \"DOING\" && (\n        <button name={\"DOING\"} onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== \"TO_DO\" && (\n        <button name={\"TO_DO\"} onClick={onClick}>\n          To Do\n        </button>\n      )}\n      {category !== \"DONE\" && (\n        <button name={\"DONE\"} onClick={onClick}>\n          Done\n        </button>\n      )}\n    </li>\n  );\n}\n\nexport default ToDo;\n","/Users/lisyongsyong/repository/TodoNomad/src/components/CreateCategory.tsx",[],[],{"ruleId":"48","severity":1,"message":"49","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":20},{"ruleId":"48","severity":1,"message":"52","line":6,"column":10,"nodeType":"50","messageId":"51","endLine":6,"endColumn":15},{"ruleId":"48","severity":1,"message":"53","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"54","line":12,"column":13,"nodeType":"50","messageId":"51","endLine":12,"endColumn":20},"@typescript-eslint/no-unused-vars","'RecoilRoot' is defined but never used.","Identifier","unusedVar","'theme' is defined but never used.","'useState' is defined but never used.","'oldToDo' is assigned a value but never used."]