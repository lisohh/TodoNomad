{"ast":null,"code":"var _jsxFileName = \"/Users/lisyongsyong/repository/TodoNomad/src/components/CreateCategory.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useRecoilState } from \"recoil\";\nimport { categoryOptionsState } from \"./atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateCategory() {\n  _s();\n  const [categories, setCategories] = useRecoilState(categoryOptionsState);\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n  const onValid = _ref => {\n    let {\n      category\n    } = _ref;\n    setCategories(oldCategories => [category, ...oldCategories]);\n    setValue(\"category\", \"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onValid),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"category\", {\n        required: \"Please write a category\",\n        validate: {\n          unique: v => !categories.includes(v) || \"이미 있는 카테고리에요.\"\n        }\n      }),\n      placeholder: \"Write a category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateCategory, \"XZUq4zOO+Q6PPRAWWRaeuK3Drzc=\", false, function () {\n  return [useRecoilState, useForm];\n});\n_c = CreateCategory;\nexport default CreateCategory;\nvar _c;\n$RefreshReg$(_c, \"CreateCategory\");","map":{"version":3,"names":["useForm","useRecoilState","categoryOptionsState","jsxDEV","_jsxDEV","CreateCategory","_s","categories","setCategories","register","handleSubmit","setValue","onValid","_ref","category","oldCategories","onSubmit","children","required","validate","unique","v","includes","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lisyongsyong/repository/TodoNomad/src/components/CreateCategory.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { useRecoilState } from \"recoil\";\nimport { categoryOptionsState } from \"./atoms\";\n\ninterface IForm {\n  category: string;\n}\n\nfunction CreateCategory() {\n  const [categories, setCategories] = useRecoilState(categoryOptionsState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const onValid = ({ category }: IForm) => {\n    setCategories((oldCategories) => [category, ...oldCategories]);\n    setValue(\"category\", \"\");\n  };\n  return (\n    <form onSubmit={handleSubmit(onValid)}>\n      <input\n        {...register(\"category\", {\n          required: \"Please write a category\",\n          validate: {\n            unique: (v) => !categories.includes(v) || \"이미 있는 카테고리에요.\",\n          },\n        })}\n        placeholder=\"Write a category\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateCategory;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,oBAAoB,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM/C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,cAAc,CAACC,oBAAoB,CAAC;EACxE,MAAM;IAAEO,QAAQ;IAAEC,YAAY;IAAEC;EAAS,CAAC,GAAGX,OAAO,EAAS;EAC7D,MAAMY,OAAO,GAAGC,IAAA,IAAyB;IAAA,IAAxB;MAAEC;IAAgB,CAAC,GAAAD,IAAA;IAClCL,aAAa,CAAEO,aAAa,IAAK,CAACD,QAAQ,EAAE,GAAGC,aAAa,CAAC,CAAC;IAC9DJ,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC;EAC1B,CAAC;EACD,oBACEP,OAAA;IAAMY,QAAQ,EAAEN,YAAY,CAACE,OAAO,CAAE;IAAAK,QAAA,gBACpCb,OAAA;MAAA,GACMK,QAAQ,CAAC,UAAU,EAAE;QACvBS,QAAQ,EAAE,yBAAyB;QACnCC,QAAQ,EAAE;UACRC,MAAM,EAAGC,CAAC,IAAK,CAACd,UAAU,CAACe,QAAQ,CAACD,CAAC,CAAC,IAAI;QAC5C;MACF,CAAC,CAAC;MACFE,WAAW,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9B,eACFvB,OAAA;MAAAa,QAAA,EAAQ;IAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACf;AAEX;AAACrB,EAAA,CArBQD,cAAc;EAAA,QACeJ,cAAc,EACLD,OAAO;AAAA;AAAA4B,EAAA,GAF7CvB,cAAc;AAuBvB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}