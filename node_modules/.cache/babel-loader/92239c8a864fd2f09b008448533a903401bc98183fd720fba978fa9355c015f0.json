{"ast":null,"code":"var _jsxFileName = \"/Users/lisyongsyong/repository/TodoNomad/src/components/CreateCategory.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useRecoilState } from \"recoil\";\nimport { categoryOptionsState } from \"./atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateCategory() {\n  _s();\n  var _errors$category;\n  const [categories, setCategories] = useRecoilState(categoryOptionsState);\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onValid = _ref => {\n    let {\n      category\n    } = _ref;\n    setCategories(oldCategories => [category, ...oldCategories]);\n    setValue(\"category\", \"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onValid),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"category\", {\n        required: \"Please write a category\",\n        validate: {\n          unique: v => !categories.includes(v) || \"이미 있는 카테고리에요.\"\n        }\n      }),\n      placeholder: \"Write a category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), ((_errors$category = errors.category) === null || _errors$category === void 0 ? void 0 : _errors$category.message) && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: errors.category.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateCategory, \"2t/gRcSA5yBdisCh3DdkvzYBl9Y=\", false, function () {\n  return [useRecoilState, useForm];\n});\n_c = CreateCategory;\nexport default CreateCategory;\nvar _c;\n$RefreshReg$(_c, \"CreateCategory\");","map":{"version":3,"names":["useForm","useRecoilState","categoryOptionsState","jsxDEV","_jsxDEV","CreateCategory","_s","_errors$category","categories","setCategories","register","handleSubmit","setValue","formState","errors","onValid","_ref","category","oldCategories","onSubmit","children","required","validate","unique","v","includes","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["/Users/lisyongsyong/repository/TodoNomad/src/components/CreateCategory.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { useRecoilState } from \"recoil\";\nimport { categoryOptionsState } from \"./atoms\";\n\ninterface IForm {\n  category: string;\n}\n\nfunction CreateCategory() {\n  const [categories, setCategories] = useRecoilState(categoryOptionsState);\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm<IForm>();\n  const onValid = ({ category }: IForm) => {\n    setCategories((oldCategories) => [category, ...oldCategories]);\n    setValue(\"category\", \"\");\n  };\n  return (\n    <form onSubmit={handleSubmit(onValid)}>\n      <input\n        {...register(\"category\", {\n          required: \"Please write a category\",\n          validate: {\n            unique: (v) => !categories.includes(v) || \"이미 있는 카테고리에요.\",\n          },\n        })}\n        placeholder=\"Write a category\"\n      />\n      {errors.category?.message && <span>{errors.category.message}</span>}\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateCategory;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,oBAAoB,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM/C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,cAAc,CAACC,oBAAoB,CAAC;EACxE,MAAM;IACJQ,QAAQ;IACRC,YAAY;IACZC,QAAQ;IACRC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGd,OAAO,EAAS;EACpB,MAAMe,OAAO,GAAGC,IAAA,IAAyB;IAAA,IAAxB;MAAEC;IAAgB,CAAC,GAAAD,IAAA;IAClCP,aAAa,CAAES,aAAa,IAAK,CAACD,QAAQ,EAAE,GAAGC,aAAa,CAAC,CAAC;IAC9DN,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC;EAC1B,CAAC;EACD,oBACER,OAAA;IAAMe,QAAQ,EAAER,YAAY,CAACI,OAAO,CAAE;IAAAK,QAAA,gBACpChB,OAAA;MAAA,GACMM,QAAQ,CAAC,UAAU,EAAE;QACvBW,QAAQ,EAAE,yBAAyB;QACnCC,QAAQ,EAAE;UACRC,MAAM,EAAGC,CAAC,IAAK,CAAChB,UAAU,CAACiB,QAAQ,CAACD,CAAC,CAAC,IAAI;QAC5C;MACF,CAAC,CAAC;MACFE,WAAW,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9B,EACD,EAAAvB,gBAAA,GAAAO,MAAM,CAACG,QAAQ,cAAAV,gBAAA,uBAAfA,gBAAA,CAAiBwB,OAAO,kBAAI3B,OAAA;MAAAgB,QAAA,EAAON,MAAM,CAACG,QAAQ,CAACc;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACnE1B,OAAA;MAAAgB,QAAA,EAAQ;IAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACf;AAEX;AAACxB,EAAA,CA3BQD,cAAc;EAAA,QACeJ,cAAc,EAM9CD,OAAO;AAAA;AAAAgC,EAAA,GAPJ3B,cAAc;AA6BvB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}