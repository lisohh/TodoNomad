{"ast":null,"code":"import { atom, selector } from \"recoil\";\nexport const categoryState = atom({\n  key: \"category\",\n  default: \"TO_DO\"\n});\nexport const toDoState = atom({\n  key: \"toDo\",\n  default: []\n});\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter(toDo => toDo.category === category);\n  }\n});","map":{"version":3,"names":["atom","selector","categoryState","key","default","toDoState","toDoSelector","get","_ref","toDos","category","filter","toDo"],"sources":["/Users/lisyongsyong/repository/TodoNomad/src/components/atoms.tsx"],"sourcesContent":["import { atom, selector } from \"recoil\";\n\ntype categories = \"TO_DO\" | \"DOING\" | \"DONE\";\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: categories;\n}\n\nexport const categoryState = atom<\"TO_DO\" | \"DOING\" | \"DONE\">({\n  key: \"category\",\n  default: \"TO_DO\",\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,QAAQ;AAUvC,OAAO,MAAMC,aAAa,GAAGF,IAAI,CAA6B;EAC5DG,GAAG,EAAE,UAAU;EACfC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGL,IAAI,CAAU;EACrCG,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAME,YAAY,GAAGL,QAAQ,CAAC;EACnCE,GAAG,EAAE,cAAc;EACnBI,GAAG,EAAEC,IAAA,IAAa;IAAA,IAAZ;MAAED;IAAI,CAAC,GAAAC,IAAA;IACX,MAAMC,KAAK,GAAGF,GAAG,CAACF,SAAS,CAAC;IAC5B,MAAMK,QAAQ,GAAGH,GAAG,CAACL,aAAa,CAAC;IACnC,OAAOO,KAAK,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,QAAQ,KAAKA,QAAQ,CAAC;EAC3D;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}